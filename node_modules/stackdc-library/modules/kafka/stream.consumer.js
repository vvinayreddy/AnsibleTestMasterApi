var kafka = require('kafka-node');
var util = require('util');
var logger = require('log4js').getLogger();

var Consumer = kafka.Consumer;
var Offset = kafka.Offset;
var Client = kafka.Client;


function StreamConsumer(config) {

    var kafka_client = new Client(config.url || config.zookeeper);
    var topics = [{
        topic: config.topic,
        partition: 0
    }];

    var options = {
        groupId: config.consumerGroup,
        autoCommit: true,
        fetchMaxWaitMs: 1000,
        fetchMaxBytes: 1024 * 1024
    };
    var consumer = new Consumer(kafka_client, topics, options);
    var offset = new Offset(kafka_client);
    consumer.on('offsetOutOfRange', function (topic) {
        topic.maxNum = 2;
        offset.fetch([topic], function (err, offsets) {
            if (err) {
                return logger.error('offset fetch error:', err);
            }
            var min = Math.min(offsets[topic.topic][topic.partition]);
            consumer.setOffset(topic.topic, topic.partition, min);
        });
    });


    return {
        onMessage: function (cb) {
            consumer.on('message', cb);
        },
        onError: function (cb) {
            consumer.on('error', cb);
        }
    }

}

module.exports = StreamConsumer;