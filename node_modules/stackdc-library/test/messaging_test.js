var streampublisher = require('../').streamPublisher;
var streamConsumer = require('../').streamConsumer;

var test_topic = 'workflow-test-4'


var publisher = new streampublisher({
    zookeeper: 'kafka.stackdc.io:2181',
    initTopics:[test_topic]
});

publisher.connect(function (err, res) {


    publisher.createTopic(test_topic, function (err, res) {
        if (err)
            console.log('error:' + err);
        else
            console.log('Result:' + res);
    });

    publisher.publishMessage(
        test_topic, {
            user: 'stackdc',
            type: 'executeTask',
            action: 'execute'
        }, {
            "host": "35.164.240.34",
            "port": 22,
            "username": "ansible_tes",
            "password": "test!23",
            "localFile": "local/test_script.sh",
            "remoteFile": "/tmp/script_test_3.sh",
            "isExecutable": true
        },
        function (err, res) {
            console.log('Result:' + res);
            console.log('error:' + err);
        });



    var consumer = new streamConsumer({
        url: 'kafka.stackdc.io:2181',
        topic: test_topic,
        consumerGroup: 'kafka-node-group-x'
    });

    consumer.onMessage(function (message) {
        console.log('message:', message);
    });

    consumer.onError(function (error) {
        console.log(error);
    });
});
/*
publisher.init({
    zookeeper: 'kafka.stackdc.io:2181'
}, function (err, status) {
    if (status) {
        publisher.createTopic(test_topic, function (err, res) {

            publisher.publishMessage(
                test_topic,{
                user:'stackdc',
                type:'executeTask',
                action:'execute'
                }, {
                    "host": "35.164.240.34",
                    "port": 22,
                    "username": "ansible_tes",
                    "password": "test!23",
                    "localFile": "local/test_script.sh",
                    "remoteFile": "/tmp/script_test_3.sh",
                    "isExecutable": true
                },
                function (err, res) {
                    console.log('Result:' + res);
                    console.log('error:' + err);
                })

        });
    }
});

*/